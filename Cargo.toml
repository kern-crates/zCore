[package]
name = "zcore"
version = "0.1.0"
authors = ["PanQL <panqinglin00@163.com>", "Yuekai Jia <equation618@gmail.com>"]
edition = "2021"
default-run = "zcore"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
# Disable cargo test, bench and doc for this package
name = "zcore"
test = false
bench = false
doc = false

[features]
# Print colorless logs
colorless-log = []

# Enable graphical output
graphic = ["kernel-hal/graphic"]
# Enable extra page table falgs for T-Head CPU with MAEE on
thead-maee = ["kernel-hal/thead-maee"]
# Disable PCI
no-pci = ["kernel-hal/no-pci"]
# Enable allwinner drivers
allwinner-drivers = ["kernel-hal/allwinner-drivers"]
# Enable fu740 drivers
fu740-drivers = ["kernel-hal/fu740-drivers"]
# TODO
loopback = ["kernel-hal/loopback"]

# Directly link the user image to the kernel image
link-user-img = []

# For bare-metal testing, if kernel panic or the root process is finished,
# shutdown the machine and exit QEMU.
baremetal-test = ["executor/baremetal-test"]

# Run as Zircon mode
zircon = ["zcore-loader/zircon"]
# Run as Linux mode
linux = ["zcore-loader/linux", "linux-object", "rcore-fs", "rcore-fs-sfs"]
# Run as LibOS mode
libos = [
  "kernel-hal/libos",
  "zcore-loader/libos",
  "async-std",
  "chrono",
  "rcore-fs-hostfs",
]

# Qemu
board-qemu = ["kernel-hal/board-qemu"]
# Run on Allwinner d1
board-d1 = ["link-user-img", "no-pci", "kernel-hal/allwinner-drivers"]
# T-HEAD C910 Light val board
board-c910light = ["link-user-img", "kernel-hal/board-c910light", "no-pci"]
# Run on u740
board-fu740 = ["link-user-img", "kernel-hal/fu740-drivers"]
# CVITEK cr1825 board
board-cr1825 = ["link-user-img", "no-pci", "thead-maee"]

# Use memory and ipi to simulate block device
mock-disk = ["linux-object/mock-disk"]

### patch dependencies, Other crates' dependencies on this crate will be overridden
[patch."https://github.com/rcore-os/rcore-fs"]
rcore-fs = { git = "https://github.com/elliott10/rcore-fs", rev = "98cfeecb" }
rcore-fs-sfs = { git = "https://github.com/elliott10/rcore-fs", rev = "98cfeecb" }
rcore-fs-ramfs = { git = "https://github.com/elliott10/rcore-fs", rev = "98cfeecb" }
rcore-fs-mountfs = { git = "https://github.com/elliott10/rcore-fs", rev = "98cfeecb" }
rcore-fs-devfs = { git = "https://github.com/elliott10/rcore-fs", rev = "98cfeecb" }
rcore-fs-hostfs = { git = "https://github.com/elliott10/rcore-fs", rev = "98cfeecb" }

[dependencies]
log = "0.4"
cfg-if = "1.0"
spin = "0.9.4"
customizable-buddy = "0.0.3"
kernel-hal = { git = "https://github.com/kern-crates/zcore-kernel-hal.git", rev = "eae409f2", default-features = false }
zcore-loader = { git = "https://github.com/kern-crates/zcore-loader.git", rev = "e9cfa35b", default-features = false }
zircon-object = { git = "https://github.com/kern-crates/zcore-zircon-object.git", rev = "178cc554" }
lock = { git = "https://github.com/DeathWish5/kernel-sync", rev = "8486b8" }
executor = { git = "https://github.com/DeathWish5/PreemptiveScheduler", rev = "e8cd353" }

linux-object = { git = "https://github.com/kern-crates/zcore-linux-object.git", rev = "1304b7e1", optional = true }
rcore-fs = { git = "https://github.com/rcore-os/rcore-fs", rev = "1a3246b", optional = true }
rcore-fs-sfs = { git = "https://github.com/rcore-os/rcore-fs", rev = "1a3246b", optional = true }

# LibOS mode
[target.'cfg(not(target_os = "none"))'.dependencies]
async-std = { version = "1.10", optional = true }
chrono = { version = "0.4", optional = true }
bitmap-allocator = { git = "https://github.com/rcore-os/bitmap-allocator", rev = "88e871a5" }
rcore-fs-hostfs = { git = "https://github.com/rcore-os/rcore-fs", rev = "1a3246b", optional = true }

# RISC-V
[target.'cfg(any(target_arch = "riscv32", target_arch = "riscv64"))'.dependencies]
r0 = "1"
riscv = "0.10"
dtb-walker = "=0.2.0-alpha.3"
page-table = "0.0.6"
sbi-rt = { version = "0.0.2", features = ["legacy"] }

# Bare-metal mode on aarch64
[target.'cfg(all(target_os = "none", target_arch = "aarch64"))'.dependencies]
rayboot = { git = "https://github.com/Luchangcheng2333/rayboot", rev = "b19c6c3" }

# Bare-metal mode on x86_64
[target.'cfg(all(target_os = "none", target_arch = "x86_64"))'.dependencies]
bitmap-allocator = { git = "https://github.com/rcore-os/bitmap-allocator", rev = "88e871a5" }
buddy_system_allocator = "0.8"
rboot = { git = "https://github.com/rcore-os/rboot.git", rev = "ad21575", default-features = false }
# rvm = { git = "https://github.com/rcore-os/RVM", rev = "e91d625", optional = true }
